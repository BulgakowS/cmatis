<?php

/**
 * ArticleTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ArticleTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ArticleTable
     */
    public static function getInstance()
    {
        return self::getQuery()
                ->execute();
    }
    
    public static function getQuery() {
        return Doctrine_Core::getTable('Article')->createQuery('a')
                ->select('a.*, t.*')
                ->leftJoin('a.Translation t')
                ->andWhere('a.enabled = ?', true);
//                ->AndWhere('t.lang = ?', substr(sfContext::getInstance()->getUser()->getCulture(), 0, 2))
    }
    
    public static function getByUrl($url)
    {
        return self::getQuery()
                ->andWhere('a.url = ?', $url)
                ->fetchOne();
    }
    
    public static function getByUrlForShow($url)
    {
        return self::getQuery()
                ->andWhere('t.lang = ?', substr(sfContext::getInstance()->getUser()->getCulture(), 0, 2))
                ->andWhere('t.lan_enable = ?', true)
                ->andWhere('a.url = ?', $url)
                ->fetchOne();
    }
    
    public static function getLast()
    {
        return self::getQuery()
                ->andWhere('t.lang = ?', substr(sfContext::getInstance()->getUser()->getCulture(), 0, 2))
                ->andWhere('t.lan_enable = ?', true)
                ->orderBy('a.updated_at DESC')
                ->limit(sfConfig::get( 'app_articleNews' ))
                ->execute();
    }
    
    public static function getLastForMain()
    {
        return self::getQuery()
                ->andWhere('a.on_main = ?', true)
                ->andWhere('t.lang = ?', substr(sfContext::getInstance()->getUser()->getCulture(), 0, 2))
                ->andWhere('t.lan_enable = ?', true)
                ->orderBy('a.updated_at DESC')
                ->limit( sfConfig::get( 'app_article_news' ) )
                ->execute();
    }
    
}